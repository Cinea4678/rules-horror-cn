
# Sample workflow for building and deploying a mdBook site to GitHub Pages
#
# To get started with mdBook see: https://rust-lang.github.io/mdBook/index.html
#
name: Deploy mdBook site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      MDBOOK_VERSION: 0.4.37
    steps:
      - uses: actions/checkout@v4
      - name: Install mdBook
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook
      - name: Build with mdBook
        run: mdbook build
      - name: Archive artiface
        run: tar cvf book.tar.gz ./book
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: root 
          key: ${{ secrets.PK }}
          source: "./book.tar.gz"
          target: "/root/www"

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
        - uses: actions/checkout@v2
        - name: Remote Unarchive
          uses: garygrossgarten/github-action-ssh@release
          with:
              command: cd /root/www && rm -rf book && tar xvf book.tar.gz 
              host: ${{ secrets.HOST }}
              username: root
              privateKey: ${{ secrets.PK }}
        - name: Deploy
          run: curl ${{ secrets.DEPLOY }}
   
